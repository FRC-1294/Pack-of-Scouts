<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks></TargetFrameworks>
		<OutputType>Exe</OutputType>
		<RootNamespace>PackOfScouts</RootNamespace>
		<UseMaui>true</UseMaui>
		<Nullable>enable</Nullable>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<NoWarn>$(NoWarn);IDE0045</NoWarn>

		<!-- Display name -->
		<ApplicationTitle>PackOfScouts</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.packofparts.packofscouts</ApplicationId>
		<ApplicationIdGuid>b1299861-e7e2-464c-810d-5f426967b88d</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.18362.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.18362.0</TargetPlatformMinVersion>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.png">
		  <Color>#512BD4</Color>
		</MauiIcon>

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <Content Include="TeleOperatorPage.xaml.cs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" />
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="MatchSchedulePage.xaml">

	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ImportShedulePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ScanQRCodePitPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ShowQRCodePagePit.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="PitSchedulePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="PitScoutingPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ScoutingSelectionPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ScanQRCodePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ScheduleSelectionPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="TeleOperator.xaml" />

	  <ProjectReference Include="..\PackOfScouts.QrCode\PackOfScouts.QrCode.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="MatchSchedulePage.xaml.cs">
	    <DependentUpon>MatchSchedulePage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ImportShedulePage.xaml.cs">
	    <DependentUpon>ImportShedulePage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ScanQRCodePitPage.xaml.cs">
	    <DependentUpon>ScanQRCodePitPage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ShowQRCodePagePit.xaml.cs">
	    <DependentUpon>ShowQRCodePagePit.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="PitSchedulePage.xaml.cs">
	    <DependentUpon>PitSchedulePage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="PitScoutingPage.xaml.cs">
	    <DependentUpon>PitScoutingPage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ScoutingSelectionPage.xaml.cs">
	    <DependentUpon>ScoutingSelectionPage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ScheduleSelectionPage.xaml.cs">
	    <DependentUpon>ScheduleSelectionPage.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="ShowQRCodePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

  <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(Configuration)' == 'Release'">
    <AppxPackageSigningEnabled>true</AppxPackageSigningEnabled>
    <PackageCertificateThumbprint>DB053A1E98511F42DE2DA1CC669E03E13A45FEF3</PackageCertificateThumbprint>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(RuntimeIdentifierOverride)' != ''">
    <RuntimeIdentifier>$(RuntimeIdentifierOverride)</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
    <PackageCertificateThumbprint>D1B1FD134A8810EA44AE5A70312946E7D5F5ABEC</PackageCertificateThumbprint>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
    <AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppInstallerUri>c:\src\</AppInstallerUri>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.22621.0</TargetFrameworks>
  </PropertyGroup>

</Project>
